{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Fade from '../Fade';\nimport { duration } from '../styles/transitions';\nimport Paper from '../Paper';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport dialogClasses, { getDialogUtilityClass } from './dialogClasses';\nimport Backdrop from '../Backdrop';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge({\n    [`& .${dialogClasses.container}`]: _extends({}, styles.container, styles[`scroll${capitalize(styleProps.scroll)}`]),\n    [`& .${dialogClasses.paper}`]: _extends({}, styles.paper, styles[`scrollPaper${capitalize(styleProps.scroll)}`], styles[`paperWidth${capitalize(String(styleProps.maxWidth))})`], styleProps.fullWidth && styles.paperFullWidth, styleProps.fullScreen && styles.paperFullScreen)\n  }, styles.root || {});\n};\n\nconst DialogBackdrop = experimentalStyled(Backdrop, {}, {\n  name: 'MuiDialog',\n  slot: 'Backdrop'\n})({\n  // Improve scrollable dialog support.\n  zIndex: -1\n});\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    scroll,\n    maxWidth,\n    fullWidth,\n    fullScreen\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    container: ['container', `scroll${capitalize(scroll)}`],\n    paper: ['paper', `paperScroll${capitalize(scroll)}`, `paperWidth${capitalize(String(maxWidth))}`, fullWidth && 'paperFullWidth', fullScreen && 'paperFullScreen']\n  };\n  return composeClasses(slots, getDialogUtilityClass, classes);\n};\n\nconst DialogRoot = experimentalStyled(Modal, {}, {\n  name: 'MuiDialog',\n  slot: 'Root',\n  overridesResolver\n})({\n  /* Styles applied to the root element. */\n  '@media print': {\n    // Use !important to override the Modal inline-style.\n    position: 'absolute !important'\n  }\n});\nconst DialogContainer = experimentalStyled('div', {}, {\n  name: 'MuiDialog',\n  slot: 'Container'\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the container element. */\n  height: '100%',\n  '@media print': {\n    height: 'auto'\n  },\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n}, styleProps.scroll === 'paper' && {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n}, styleProps.scroll === 'body' && {\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  textAlign: 'center',\n  '&:after': {\n    content: '\"\"',\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    height: '100%',\n    width: '0'\n  }\n}));\nconst DialogPaper = experimentalStyled(Paper, {}, {\n  name: 'MuiDialog',\n  slot: 'Paper'\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the Paper component. */\n  margin: 32,\n  position: 'relative',\n  overflowY: 'auto',\n  // Fix IE11 issue, to remove at some point.\n  '@media print': {\n    overflowY: 'visible',\n    boxShadow: 'none'\n  }\n}, styleProps.scroll === 'paper' && {\n  display: 'flex',\n  flexDirection: 'column',\n  maxHeight: 'calc(100% - 64px)'\n}, styleProps.scroll === 'body' && {\n  display: 'inline-block',\n  verticalAlign: 'middle',\n  textAlign: 'left' // 'initial' doesn't work on IE11\n\n}, !styleProps.maxWidth && {\n  maxWidth: 'calc(100% - 64px)'\n}, styleProps.maxWidth === 'xs' && {\n  maxWidth: Math.max(theme.breakpoints.values.xs, 444),\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, styleProps.maxWidth === 'sm' && {\n  maxWidth: theme.breakpoints.values.sm,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(theme.breakpoints.values.sm + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, styleProps.maxWidth === 'md' && {\n  maxWidth: theme.breakpoints.values.md,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(theme.breakpoints.values.md + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, styleProps.maxWidth === 'lg' && {\n  maxWidth: theme.breakpoints.values.lg,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(theme.breakpoints.values.lg + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, styleProps.maxWidth === 'xl' && {\n  maxWidth: theme.breakpoints.values.xl,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(theme.breakpoints.values.xl + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, styleProps.fullWidth && {\n  width: 'calc(100% - 64px)'\n}, styleProps.fullScreen && {\n  margin: 0,\n  width: '100%',\n  maxWidth: '100%',\n  height: '100%',\n  maxHeight: 'none',\n  borderRadius: 0,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    margin: 0,\n    maxWidth: '100%'\n  }\n}));\nconst defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\n\nconst Dialog = /*#__PURE__*/React.forwardRef(function Dialog(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialog'\n  });\n\n  const {\n    'aria-describedby': ariaDescribedby,\n    'aria-labelledby': ariaLabelledby,\n    BackdropComponent,\n    BackdropProps,\n    children,\n    className,\n    disableEscapeKeyDown = false,\n    fullScreen = false,\n    fullWidth = false,\n    maxWidth = 'sm',\n    onBackdropClick,\n    onClose,\n    open,\n    PaperComponent = Paper,\n    PaperProps = {},\n    scroll = 'paper',\n    TransitionComponent = Fade,\n    transitionDuration = defaultTransitionDuration,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"aria-describedby\", \"aria-labelledby\", \"BackdropComponent\", \"BackdropProps\", \"children\", \"className\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  const styleProps = _extends({}, props, {\n    disableEscapeKeyDown,\n    fullScreen,\n    fullWidth,\n    maxWidth,\n    scroll\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const backdropClick = React.useRef();\n\n  const handleMouseDown = event => {\n    // We don't want to close the dialog when clicking the dialog content.\n    // Make sure the event starts and ends on the same DOM element.\n    backdropClick.current = event.target === event.currentTarget;\n  };\n\n  const handleBackdropClick = event => {\n    // Ignore the events not coming from the \"backdrop\".\n    if (!backdropClick.current) {\n      return;\n    }\n\n    backdropClick.current = null;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  return /*#__PURE__*/_jsx(DialogRoot, _extends({\n    className: clsx(classes.root, className),\n    BackdropProps: _extends({\n      transitionDuration,\n      as: BackdropComponent\n    }, BackdropProps),\n    closeAfterTransition: true,\n    BackdropComponent: DialogBackdrop,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref,\n    onClick: handleBackdropClick,\n    styleProps: styleProps\n  }, other, {\n    children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n      appear: true,\n      in: open,\n      timeout: transitionDuration,\n      role: \"presentation\"\n    }, TransitionProps, {\n      children: /*#__PURE__*/_jsx(DialogContainer, {\n        className: clsx(classes.container),\n        onMouseDown: handleMouseDown,\n        styleProps: styleProps,\n        children: /*#__PURE__*/_jsx(DialogPaper, _extends({\n          as: PaperComponent,\n          elevation: 24,\n          role: \"dialog\",\n          \"aria-describedby\": ariaDescribedby,\n          \"aria-labelledby\": ariaLabelledby\n        }, PaperProps, {\n          className: clsx(classes.paper, PaperProps.className),\n          styleProps: styleProps,\n          children: children\n        }))\n      })\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog is full-screen.\n   * @default false\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'sm'\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false]),\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The component used to render the body of the dialog.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   * @default {}\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Determine the container for scrolling the dialog.\n   * @default 'paper'\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Fade\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default { enter: duration.enteringScreen, exit: duration.leavingScreen }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Dialog;","map":{"version":3,"sources":["/Users/jgchen/Desktop/Dev/graph-visualizer/node_modules/@material-ui/core/Dialog/Dialog.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","deepmerge","unstable_composeClasses","composeClasses","capitalize","Modal","Fade","duration","Paper","useThemeProps","experimentalStyled","dialogClasses","getDialogUtilityClass","Backdrop","jsx","_jsx","overridesResolver","props","styles","styleProps","container","scroll","paper","String","maxWidth","fullWidth","paperFullWidth","fullScreen","paperFullScreen","root","DialogBackdrop","name","slot","zIndex","useUtilityClasses","classes","slots","DialogRoot","position","DialogContainer","height","outline","display","justifyContent","alignItems","overflowY","overflowX","textAlign","content","verticalAlign","width","DialogPaper","theme","margin","boxShadow","flexDirection","maxHeight","Math","max","breakpoints","values","xs","paperScrollBody","down","sm","md","lg","xl","borderRadius","defaultTransitionDuration","enter","enteringScreen","exit","leavingScreen","Dialog","forwardRef","inProps","ref","ariaDescribedby","ariaLabelledby","BackdropComponent","BackdropProps","children","className","disableEscapeKeyDown","onBackdropClick","onClose","open","PaperComponent","PaperProps","TransitionComponent","transitionDuration","TransitionProps","other","backdropClick","useRef","handleMouseDown","event","current","target","currentTarget","handleBackdropClick","as","closeAfterTransition","onClick","appear","in","timeout","role","onMouseDown","elevation","process","env","NODE_ENV","propTypes","string","elementType","object","node","bool","oneOf","func","isRequired","sx","oneOfType","number","shape"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Fade from '../Fade';\nimport { duration } from '../styles/transitions';\nimport Paper from '../Paper';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport dialogClasses, { getDialogUtilityClass } from './dialogClasses';\nimport Backdrop from '../Backdrop';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge({\n    [`& .${dialogClasses.container}`]: _extends({}, styles.container, styles[`scroll${capitalize(styleProps.scroll)}`]),\n    [`& .${dialogClasses.paper}`]: _extends({}, styles.paper, styles[`scrollPaper${capitalize(styleProps.scroll)}`], styles[`paperWidth${capitalize(String(styleProps.maxWidth))})`], styleProps.fullWidth && styles.paperFullWidth, styleProps.fullScreen && styles.paperFullScreen)\n  }, styles.root || {});\n};\n\nconst DialogBackdrop = experimentalStyled(Backdrop, {}, {\n  name: 'MuiDialog',\n  slot: 'Backdrop'\n})({\n  // Improve scrollable dialog support.\n  zIndex: -1\n});\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    scroll,\n    maxWidth,\n    fullWidth,\n    fullScreen\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    container: ['container', `scroll${capitalize(scroll)}`],\n    paper: ['paper', `paperScroll${capitalize(scroll)}`, `paperWidth${capitalize(String(maxWidth))}`, fullWidth && 'paperFullWidth', fullScreen && 'paperFullScreen']\n  };\n  return composeClasses(slots, getDialogUtilityClass, classes);\n};\n\nconst DialogRoot = experimentalStyled(Modal, {}, {\n  name: 'MuiDialog',\n  slot: 'Root',\n  overridesResolver\n})({\n  /* Styles applied to the root element. */\n  '@media print': {\n    // Use !important to override the Modal inline-style.\n    position: 'absolute !important'\n  }\n});\nconst DialogContainer = experimentalStyled('div', {}, {\n  name: 'MuiDialog',\n  slot: 'Container'\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the container element. */\n  height: '100%',\n  '@media print': {\n    height: 'auto'\n  },\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n}, styleProps.scroll === 'paper' && {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n}, styleProps.scroll === 'body' && {\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  textAlign: 'center',\n  '&:after': {\n    content: '\"\"',\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    height: '100%',\n    width: '0'\n  }\n}));\nconst DialogPaper = experimentalStyled(Paper, {}, {\n  name: 'MuiDialog',\n  slot: 'Paper'\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the Paper component. */\n  margin: 32,\n  position: 'relative',\n  overflowY: 'auto',\n  // Fix IE11 issue, to remove at some point.\n  '@media print': {\n    overflowY: 'visible',\n    boxShadow: 'none'\n  }\n}, styleProps.scroll === 'paper' && {\n  display: 'flex',\n  flexDirection: 'column',\n  maxHeight: 'calc(100% - 64px)'\n}, styleProps.scroll === 'body' && {\n  display: 'inline-block',\n  verticalAlign: 'middle',\n  textAlign: 'left' // 'initial' doesn't work on IE11\n\n}, !styleProps.maxWidth && {\n  maxWidth: 'calc(100% - 64px)'\n}, styleProps.maxWidth === 'xs' && {\n  maxWidth: Math.max(theme.breakpoints.values.xs, 444),\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, styleProps.maxWidth === 'sm' && {\n  maxWidth: theme.breakpoints.values.sm,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(theme.breakpoints.values.sm + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, styleProps.maxWidth === 'md' && {\n  maxWidth: theme.breakpoints.values.md,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(theme.breakpoints.values.md + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, styleProps.maxWidth === 'lg' && {\n  maxWidth: theme.breakpoints.values.lg,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(theme.breakpoints.values.lg + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, styleProps.maxWidth === 'xl' && {\n  maxWidth: theme.breakpoints.values.xl,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(theme.breakpoints.values.xl + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, styleProps.fullWidth && {\n  width: 'calc(100% - 64px)'\n}, styleProps.fullScreen && {\n  margin: 0,\n  width: '100%',\n  maxWidth: '100%',\n  height: '100%',\n  maxHeight: 'none',\n  borderRadius: 0,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    margin: 0,\n    maxWidth: '100%'\n  }\n}));\nconst defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\n\nconst Dialog = /*#__PURE__*/React.forwardRef(function Dialog(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialog'\n  });\n\n  const {\n    'aria-describedby': ariaDescribedby,\n    'aria-labelledby': ariaLabelledby,\n    BackdropComponent,\n    BackdropProps,\n    children,\n    className,\n    disableEscapeKeyDown = false,\n    fullScreen = false,\n    fullWidth = false,\n    maxWidth = 'sm',\n    onBackdropClick,\n    onClose,\n    open,\n    PaperComponent = Paper,\n    PaperProps = {},\n    scroll = 'paper',\n    TransitionComponent = Fade,\n    transitionDuration = defaultTransitionDuration,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"aria-describedby\", \"aria-labelledby\", \"BackdropComponent\", \"BackdropProps\", \"children\", \"className\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  const styleProps = _extends({}, props, {\n    disableEscapeKeyDown,\n    fullScreen,\n    fullWidth,\n    maxWidth,\n    scroll\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const backdropClick = React.useRef();\n\n  const handleMouseDown = event => {\n    // We don't want to close the dialog when clicking the dialog content.\n    // Make sure the event starts and ends on the same DOM element.\n    backdropClick.current = event.target === event.currentTarget;\n  };\n\n  const handleBackdropClick = event => {\n    // Ignore the events not coming from the \"backdrop\".\n    if (!backdropClick.current) {\n      return;\n    }\n\n    backdropClick.current = null;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  return /*#__PURE__*/_jsx(DialogRoot, _extends({\n    className: clsx(classes.root, className),\n    BackdropProps: _extends({\n      transitionDuration,\n      as: BackdropComponent\n    }, BackdropProps),\n    closeAfterTransition: true,\n    BackdropComponent: DialogBackdrop,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref,\n    onClick: handleBackdropClick,\n    styleProps: styleProps\n  }, other, {\n    children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n      appear: true,\n      in: open,\n      timeout: transitionDuration,\n      role: \"presentation\"\n    }, TransitionProps, {\n      children: /*#__PURE__*/_jsx(DialogContainer, {\n        className: clsx(classes.container),\n        onMouseDown: handleMouseDown,\n        styleProps: styleProps,\n        children: /*#__PURE__*/_jsx(DialogPaper, _extends({\n          as: PaperComponent,\n          elevation: 24,\n          role: \"dialog\",\n          \"aria-describedby\": ariaDescribedby,\n          \"aria-labelledby\": ariaLabelledby\n        }, PaperProps, {\n          className: clsx(classes.paper, PaperProps.className),\n          styleProps: styleProps,\n          children: children\n        }))\n      })\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog is full-screen.\n   * @default false\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'sm'\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false]),\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The component used to render the body of the dialog.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   * @default {}\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Determine the container for scrolling the dialog.\n   * @default 'paper'\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Fade\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default { enter: duration.enteringScreen, exit: duration.leavingScreen }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Dialog;"]},"metadata":{},"sourceType":"module"}