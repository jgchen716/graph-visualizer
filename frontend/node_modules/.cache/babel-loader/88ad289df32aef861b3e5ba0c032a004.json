{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport IconButton from '../IconButton';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    checked,\n    disabled\n  } = styleProps;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled'],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\n\nconst SwitchBaseRoot = experimentalStyled(IconButton)({\n  /* Styles applied to the root element. */\n  padding: 9\n});\nconst SwitchBaseInput = experimentalStyled('input')({\n  /* Styles applied to the internal input element. */\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required,\n    tabIndex,\n    type,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n\n  const styleProps = _extends({}, props, {\n    checked,\n    disabled\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    styleProps: styleProps,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      styleProps: styleProps,\n      tabIndex: tabIndex,\n      type: type,\n      value: value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","map":{"version":3,"sources":["/Users/jgchen/Desktop/Dev/graph-visualizer/node_modules/@material-ui/core/internal/SwitchBase.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","refType","unstable_composeClasses","composeClasses","experimentalStyled","useControlled","useFormControl","IconButton","getSwitchBaseUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","styleProps","classes","checked","disabled","slots","root","input","SwitchBaseRoot","padding","SwitchBaseInput","cursor","position","opacity","width","height","top","left","margin","zIndex","SwitchBase","forwardRef","props","ref","autoFocus","checkedProp","checkedIcon","className","defaultChecked","disabledProp","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","setCheckedState","controlled","default","Boolean","state","muiFormControl","handleFocus","event","handleBlur","handleInputChange","nativeEvent","defaultPrevented","newChecked","target","hasLabelFor","component","role","undefined","children","process","env","NODE_ENV","propTypes","bool","node","isRequired","object","string","func","sx","oneOfType","number","any"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport IconButton from '../IconButton';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    checked,\n    disabled\n  } = styleProps;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled'],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\n\nconst SwitchBaseRoot = experimentalStyled(IconButton)({\n  /* Styles applied to the root element. */\n  padding: 9\n});\nconst SwitchBaseInput = experimentalStyled('input')({\n  /* Styles applied to the internal input element. */\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required,\n    tabIndex,\n    type,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n\n  const styleProps = _extends({}, props, {\n    checked,\n    disabled\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    styleProps: styleProps,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      styleProps: styleProps,\n      tabIndex: tabIndex,\n      type: type,\n      value: value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;"]},"metadata":{},"sourceType":"module"}