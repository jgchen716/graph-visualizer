{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType, deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { alpha } from '../styles/colorManipulator';\nimport useTheme from '../styles/useTheme';\nimport { getPaperUtilityClass } from './paperClasses'; // Inspired by https://github.com/material-components/material-components-ios/blob/bca36107405594d5b7b16265a5b0ed698f85a5ee/components/Elevation/src/UIColor%2BMaterialElevation.m#L61\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst getOverlayAlpha = elevation => {\n  let alphaValue;\n\n  if (elevation < 1) {\n    alphaValue = 5.11916 * elevation ** 2;\n  } else {\n    alphaValue = 4.5 * Math.log(elevation + 1) + 2;\n  }\n\n  return (alphaValue / 100).toFixed(2);\n};\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styles[styleProps.variant], !styleProps.square && styles.rounded, styleProps.variant === 'elevation' && styles[`elevation${styleProps.elevation}`]), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    square,\n    elevation,\n    variant,\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root', variant, !square && 'rounded', variant === 'elevation' && `elevation${elevation}`]\n  };\n  return composeClasses(slots, getPaperUtilityClass, classes);\n};\n\nconst PaperRoot = experimentalStyled('div', {}, {\n  name: 'MuiPaper',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  backgroundColor: theme.palette.background.paper,\n  color: theme.palette.text.primary,\n  transition: theme.transitions.create('box-shadow')\n}, !styleProps.square && {\n  borderRadius: theme.shape.borderRadius\n}, styleProps.variant === 'outlined' && {\n  border: `1px solid ${theme.palette.divider}`\n}, styleProps.variant === 'elevation' && _extends({\n  boxShadow: theme.shadows[styleProps.elevation]\n}, theme.palette.mode === 'dark' && {\n  backgroundImage: `linear-gradient(${alpha('#fff', getOverlayAlpha(styleProps.elevation))}, ${alpha('#fff', getOverlayAlpha(styleProps.elevation))})`\n})));\nconst Paper = /*#__PURE__*/React.forwardRef(function Paper(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiPaper'\n  });\n\n  const {\n    className,\n    component = 'div',\n    elevation = 1,\n    square = false,\n    variant = 'elevation'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"component\", \"elevation\", \"square\", \"variant\"]);\n\n  const styleProps = _extends({}, props, {\n    component,\n    elevation,\n    square,\n    variant\n  });\n\n  const classes = useUtilityClasses(styleProps);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const theme = useTheme();\n\n    if (theme.shadows[elevation] === undefined) {\n      console.error([`Material-UI: The elevation provided <Paper elevation={${elevation}}> is not available in the theme.`, `Please make sure that \\`theme.shadows[${elevation}]\\` is defined.`].join('\\n'));\n    }\n  }\n\n  return /*#__PURE__*/_jsx(PaperRoot, _extends({\n    as: component,\n    styleProps: styleProps,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   * @default 1\n   */\n  elevation: chainPropTypes(integerPropType, props => {\n    const {\n      elevation,\n      variant\n    } = props;\n\n    if (elevation > 0 && variant === 'outlined') {\n      return new Error(`Material-UI: Combining \\`elevation={${elevation}}\\` with \\`variant=\"${variant}\"\\` has no effect. Either use \\`elevation={0}\\` or use a different \\`variant\\`.`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   * @default 'elevation'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['elevation', 'outlined']), PropTypes.string])\n} : void 0;\nexport default Paper;","map":{"version":3,"sources":["/Users/jgchen/Desktop/Dev/graph-visualizer/node_modules/@material-ui/core/Paper/Paper.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","chainPropTypes","integerPropType","deepmerge","unstable_composeClasses","composeClasses","experimentalStyled","useThemeProps","alpha","useTheme","getPaperUtilityClass","jsx","_jsx","getOverlayAlpha","elevation","alphaValue","Math","log","toFixed","overridesResolver","props","styles","styleProps","variant","square","rounded","root","useUtilityClasses","classes","slots","PaperRoot","name","slot","theme","backgroundColor","palette","background","paper","color","text","primary","transition","transitions","create","borderRadius","shape","border","divider","boxShadow","shadows","mode","backgroundImage","Paper","forwardRef","inProps","ref","className","component","other","process","env","NODE_ENV","undefined","console","error","join","as","propTypes","children","node","object","string","elementType","Error","bool","sx","oneOfType","oneOf"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType, deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { alpha } from '../styles/colorManipulator';\nimport useTheme from '../styles/useTheme';\nimport { getPaperUtilityClass } from './paperClasses'; // Inspired by https://github.com/material-components/material-components-ios/blob/bca36107405594d5b7b16265a5b0ed698f85a5ee/components/Elevation/src/UIColor%2BMaterialElevation.m#L61\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst getOverlayAlpha = elevation => {\n  let alphaValue;\n\n  if (elevation < 1) {\n    alphaValue = 5.11916 * elevation ** 2;\n  } else {\n    alphaValue = 4.5 * Math.log(elevation + 1) + 2;\n  }\n\n  return (alphaValue / 100).toFixed(2);\n};\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styles[styleProps.variant], !styleProps.square && styles.rounded, styleProps.variant === 'elevation' && styles[`elevation${styleProps.elevation}`]), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    square,\n    elevation,\n    variant,\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root', variant, !square && 'rounded', variant === 'elevation' && `elevation${elevation}`]\n  };\n  return composeClasses(slots, getPaperUtilityClass, classes);\n};\n\nconst PaperRoot = experimentalStyled('div', {}, {\n  name: 'MuiPaper',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  backgroundColor: theme.palette.background.paper,\n  color: theme.palette.text.primary,\n  transition: theme.transitions.create('box-shadow')\n}, !styleProps.square && {\n  borderRadius: theme.shape.borderRadius\n}, styleProps.variant === 'outlined' && {\n  border: `1px solid ${theme.palette.divider}`\n}, styleProps.variant === 'elevation' && _extends({\n  boxShadow: theme.shadows[styleProps.elevation]\n}, theme.palette.mode === 'dark' && {\n  backgroundImage: `linear-gradient(${alpha('#fff', getOverlayAlpha(styleProps.elevation))}, ${alpha('#fff', getOverlayAlpha(styleProps.elevation))})`\n})));\nconst Paper = /*#__PURE__*/React.forwardRef(function Paper(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiPaper'\n  });\n\n  const {\n    className,\n    component = 'div',\n    elevation = 1,\n    square = false,\n    variant = 'elevation'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"component\", \"elevation\", \"square\", \"variant\"]);\n\n  const styleProps = _extends({}, props, {\n    component,\n    elevation,\n    square,\n    variant\n  });\n\n  const classes = useUtilityClasses(styleProps);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const theme = useTheme();\n\n    if (theme.shadows[elevation] === undefined) {\n      console.error([`Material-UI: The elevation provided <Paper elevation={${elevation}}> is not available in the theme.`, `Please make sure that \\`theme.shadows[${elevation}]\\` is defined.`].join('\\n'));\n    }\n  }\n\n  return /*#__PURE__*/_jsx(PaperRoot, _extends({\n    as: component,\n    styleProps: styleProps,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   * @default 1\n   */\n  elevation: chainPropTypes(integerPropType, props => {\n    const {\n      elevation,\n      variant\n    } = props;\n\n    if (elevation > 0 && variant === 'outlined') {\n      return new Error(`Material-UI: Combining \\`elevation={${elevation}}\\` with \\`variant=\"${variant}\"\\` has no effect. Either use \\`elevation={0}\\` or use a different \\`variant\\`.`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   * @default 'elevation'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['elevation', 'outlined']), PropTypes.string])\n} : void 0;\nexport default Paper;"]},"metadata":{},"sourceType":"module"}