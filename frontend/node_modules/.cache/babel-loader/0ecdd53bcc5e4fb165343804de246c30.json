{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@material-ui/system';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styleProps.variant && styles[styleProps.variant], styleProps.align !== 'inherit' && styles[`align${capitalize(styleProps.align)}`], styleProps.noWrap && styles.noWrap, styleProps.gutterBottom && styles.gutterBottom, styleProps.paragraph && styles.paragraph), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root', variant, styleProps.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\n\nexport const TypographyRoot = experimentalStyled('span', {}, {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  margin: 0\n}, styleProps.variant && theme.typography[styleProps.variant], styleProps.align !== 'inherit' && {\n  textAlign: styleProps.align\n}, styleProps.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, styleProps.gutterBottom && {\n  marginBottom: '0.35em'\n}, styleProps.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n}; // TODO v6: deprecate these color values in v5.x and remove the transformation in v6\n\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  themeProps.color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(themeProps);\n\n  const {\n    align = 'inherit',\n    className,\n    component,\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = 'body1',\n    variantMapping = defaultVariantMapping\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  const styleProps = _extends({}, props, {\n    align,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    styleProps: styleProps,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .object\n} : void 0;\nexport default Typography;","map":{"version":3,"sources":["/Users/jgchen/Desktop/Dev/graph-visualizer/node_modules/@material-ui/core/Typography/Typography.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","unstable_extendSxProp","extendSxProp","deepmerge","unstable_composeClasses","composeClasses","experimentalStyled","useThemeProps","capitalize","getTypographyUtilityClass","jsx","_jsx","overridesResolver","props","styles","styleProps","variant","align","noWrap","gutterBottom","paragraph","root","useUtilityClasses","classes","slots","TypographyRoot","name","slot","theme","margin","typography","textAlign","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","transformDeprecatedColors","color","Typography","forwardRef","inProps","ref","themeProps","className","component","variantMapping","other","Component","as","process","env","NODE_ENV","propTypes","oneOf","children","node","object","string","elementType","bool","sx","oneOfType"],"mappings":"AAAA,OAAOA,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,qBAAqB,IAAIC,YAAlC,QAAsD,qBAAtD;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,uBAAuB,IAAIC,cAApC,QAA0D,uBAA1D;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,yBAAT,QAA0C,qBAA1C;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;;AAEA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3C,QAAM;AACJC,IAAAA;AADI,MAEFF,KAFJ;AAGA,SAAOV,SAAS,CAACN,QAAQ,CAAC,EAAD,EAAKkB,UAAU,CAACC,OAAX,IAAsBF,MAAM,CAACC,UAAU,CAACC,OAAZ,CAAjC,EAAuDD,UAAU,CAACE,KAAX,KAAqB,SAArB,IAAkCH,MAAM,CAAE,QAAON,UAAU,CAACO,UAAU,CAACE,KAAZ,CAAmB,EAAtC,CAA/F,EAAyIF,UAAU,CAACG,MAAX,IAAqBJ,MAAM,CAACI,MAArK,EAA6KH,UAAU,CAACI,YAAX,IAA2BL,MAAM,CAACK,YAA/M,EAA6NJ,UAAU,CAACK,SAAX,IAAwBN,MAAM,CAACM,SAA5P,CAAT,EAAiRN,MAAM,CAACO,IAAP,IAAe,EAAhS,CAAhB;AACD,CALD;;AAOA,MAAMC,iBAAiB,GAAGP,UAAU,IAAI;AACtC,QAAM;AACJE,IAAAA,KADI;AAEJE,IAAAA,YAFI;AAGJD,IAAAA,MAHI;AAIJE,IAAAA,SAJI;AAKJJ,IAAAA,OALI;AAMJO,IAAAA;AANI,MAOFR,UAPJ;AAQA,QAAMS,KAAK,GAAG;AACZH,IAAAA,IAAI,EAAE,CAAC,MAAD,EAASL,OAAT,EAAkBD,UAAU,CAACE,KAAX,KAAqB,SAArB,IAAmC,QAAOT,UAAU,CAACS,KAAD,CAAQ,EAA9E,EAAiFE,YAAY,IAAI,cAAjG,EAAiHD,MAAM,IAAI,QAA3H,EAAqIE,SAAS,IAAI,WAAlJ;AADM,GAAd;AAGA,SAAOf,cAAc,CAACmB,KAAD,EAAQf,yBAAR,EAAmCc,OAAnC,CAArB;AACD,CAbD;;AAeA,OAAO,MAAME,cAAc,GAAGnB,kBAAkB,CAAC,MAAD,EAAS,EAAT,EAAa;AAC3DoB,EAAAA,IAAI,EAAE,eADqD;AAE3DC,EAAAA,IAAI,EAAE,MAFqD;AAG3Df,EAAAA;AAH2D,CAAb,CAAlB,CAI3B,CAAC;AACFgB,EAAAA,KADE;AAEFb,EAAAA;AAFE,CAAD,KAGGlB,QAAQ,CAAC;AACbgC,EAAAA,MAAM,EAAE;AADK,CAAD,EAEXd,UAAU,CAACC,OAAX,IAAsBY,KAAK,CAACE,UAAN,CAAiBf,UAAU,CAACC,OAA5B,CAFX,EAEiDD,UAAU,CAACE,KAAX,KAAqB,SAArB,IAAkC;AAC/Fc,EAAAA,SAAS,EAAEhB,UAAU,CAACE;AADyE,CAFnF,EAIXF,UAAU,CAACG,MAAX,IAAqB;AACtBc,EAAAA,QAAQ,EAAE,QADY;AAEtBC,EAAAA,YAAY,EAAE,UAFQ;AAGtBC,EAAAA,UAAU,EAAE;AAHU,CAJV,EAQXnB,UAAU,CAACI,YAAX,IAA2B;AAC5BgB,EAAAA,YAAY,EAAE;AADc,CARhB,EAUXpB,UAAU,CAACK,SAAX,IAAwB;AACzBe,EAAAA,YAAY,EAAE;AADW,CAVb,CAPgB,CAAvB;AAoBP,MAAMC,qBAAqB,GAAG;AAC5BC,EAAAA,EAAE,EAAE,IADwB;AAE5BC,EAAAA,EAAE,EAAE,IAFwB;AAG5BC,EAAAA,EAAE,EAAE,IAHwB;AAI5BC,EAAAA,EAAE,EAAE,IAJwB;AAK5BC,EAAAA,EAAE,EAAE,IALwB;AAM5BC,EAAAA,EAAE,EAAE,IANwB;AAO5BC,EAAAA,SAAS,EAAE,IAPiB;AAQ5BC,EAAAA,SAAS,EAAE,IARiB;AAS5BC,EAAAA,KAAK,EAAE,GATqB;AAU5BC,EAAAA,KAAK,EAAE,GAVqB;AAW5BC,EAAAA,OAAO,EAAE;AAXmB,CAA9B,C,CAYG;;AAEH,MAAMC,oBAAoB,GAAG;AAC3BC,EAAAA,OAAO,EAAE,cADkB;AAE3BC,EAAAA,WAAW,EAAE,cAFc;AAG3BC,EAAAA,SAAS,EAAE,gBAHgB;AAI3BC,EAAAA,aAAa,EAAE,gBAJY;AAK3BC,EAAAA,KAAK,EAAE;AALoB,CAA7B;;AAQA,MAAMC,yBAAyB,GAAGC,KAAK,IAAI;AACzC,SAAOP,oBAAoB,CAACO,KAAD,CAApB,IAA+BA,KAAtC;AACD,CAFD;;AAIA,MAAMC,UAAU,GAAG,aAAa1D,KAAK,CAAC2D,UAAN,CAAiB,SAASD,UAAT,CAAoBE,OAApB,EAA6BC,GAA7B,EAAkC;AACjF,QAAMC,UAAU,GAAGrD,aAAa,CAAC;AAC/BM,IAAAA,KAAK,EAAE6C,OADwB;AAE/BhC,IAAAA,IAAI,EAAE;AAFyB,GAAD,CAAhC;AAIAkC,EAAAA,UAAU,CAACL,KAAX,GAAmBD,yBAAyB,CAACM,UAAU,CAACL,KAAZ,CAA5C;AACA,QAAM1C,KAAK,GAAGX,YAAY,CAAC0D,UAAD,CAA1B;;AAEA,QAAM;AACJ3C,IAAAA,KAAK,GAAG,SADJ;AAEJ4C,IAAAA,SAFI;AAGJC,IAAAA,SAHI;AAIJ3C,IAAAA,YAAY,GAAG,KAJX;AAKJD,IAAAA,MAAM,GAAG,KALL;AAMJE,IAAAA,SAAS,GAAG,KANR;AAOJJ,IAAAA,OAAO,GAAG,OAPN;AAQJ+C,IAAAA,cAAc,GAAG3B;AARb,MASFvB,KATJ;AAAA,QAUMmD,KAAK,GAAGpE,6BAA6B,CAACiB,KAAD,EAAQ,CAAC,OAAD,EAAU,WAAV,EAAuB,WAAvB,EAAoC,cAApC,EAAoD,QAApD,EAA8D,WAA9D,EAA2E,SAA3E,EAAsF,gBAAtF,CAAR,CAV3C;;AAYA,QAAME,UAAU,GAAGlB,QAAQ,CAAC,EAAD,EAAKgB,KAAL,EAAY;AACrCI,IAAAA,KADqC;AAErC4C,IAAAA,SAFqC;AAGrCC,IAAAA,SAHqC;AAIrC3C,IAAAA,YAJqC;AAKrCD,IAAAA,MALqC;AAMrCE,IAAAA,SANqC;AAOrCJ,IAAAA,OAPqC;AAQrC+C,IAAAA;AARqC,GAAZ,CAA3B;;AAWA,QAAME,SAAS,GAAGH,SAAS,KAAK1C,SAAS,GAAG,GAAH,GAAS2C,cAAc,CAAC/C,OAAD,CAAd,IAA2BoB,qBAAqB,CAACpB,OAAD,CAAvE,CAAT,IAA8F,MAAhH;AACA,QAAMO,OAAO,GAAGD,iBAAiB,CAACP,UAAD,CAAjC;AACA,SAAO,aAAaJ,IAAI,CAACc,cAAD,EAAiB5B,QAAQ,CAAC;AAChDqE,IAAAA,EAAE,EAAED,SAD4C;AAEhDN,IAAAA,GAAG,EAAEA,GAF2C;AAGhD5C,IAAAA,UAAU,EAAEA,UAHoC;AAIhD8C,IAAAA,SAAS,EAAE7D,IAAI,CAACuB,OAAO,CAACF,IAAT,EAAewC,SAAf;AAJiC,GAAD,EAK9CG,KAL8C,CAAzB,CAAxB;AAMD,CAvC+B,CAAhC;AAwCAG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCb,UAAU,CAACc;AACnD;AADwC,EAEtC;AACA;AACA;AACA;AACA;;AAEA;AACF;AACA;AACA;AACErD,EAAAA,KAAK,EAAElB,SAAS,CAACwE,KAAV,CAAgB,CAAC,QAAD,EAAW,SAAX,EAAsB,SAAtB,EAAiC,MAAjC,EAAyC,OAAzC,CAAhB,CAVP;;AAYA;AACF;AACA;AACEC,EAAAA,QAAQ,EAAEzE,SAAS,CAAC0E,IAfpB;;AAiBA;AACF;AACA;AACElD,EAAAA,OAAO,EAAExB,SAAS,CAAC2E,MApBnB;;AAsBA;AACF;AACA;AACEb,EAAAA,SAAS,EAAE9D,SAAS,CAAC4E,MAzBrB;;AA2BA;AACF;AACA;AACA;AACEb,EAAAA,SAAS,EAAE/D,SAAS,CAAC6E,WA/BrB;;AAiCA;AACF;AACA;AACA;AACEzD,EAAAA,YAAY,EAAEpB,SAAS,CAAC8E,IArCxB;;AAuCA;AACF;AACA;AACA;AACA;AACA;AACA;AACE3D,EAAAA,MAAM,EAAEnB,SAAS,CAAC8E,IA9ClB;;AAgDA;AACF;AACA;AACA;AACEzD,EAAAA,SAAS,EAAErB,SAAS,CAAC8E,IApDrB;;AAsDA;AACF;AACA;AACEC,EAAAA,EAAE,EAAE/E,SAAS,CAAC2E,MAzDd;;AA2DA;AACF;AACA;AACA;AACE1D,EAAAA,OAAO,EAAEjB;AACT;AADkB,GAEjBgF,SAFQ,CAEE,CAAChF,SAAS,CAACwE,KAAV,CAAgB,CAAC,OAAD,EAAU,OAAV,EAAmB,QAAnB,EAA6B,SAA7B,EAAwC,IAAxC,EAA8C,IAA9C,EAAoD,IAApD,EAA0D,IAA1D,EAAgE,IAAhE,EAAsE,IAAtE,EAA4E,SAA5E,EAAuF,UAAvF,EAAmG,WAAnG,EAAgH,WAAhH,CAAhB,CAAD,EAAgJxE,SAAS,CAAC4E,MAA1J,CAFF,CA/DT;;AAmEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEZ,EAAAA,cAAc,EAAEhE;AAChB;AADyB,GAExB2E;AAxFD,CAFF,GA2FI,KAAK,CA3FT;AA4FA,eAAelB,UAAf","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@material-ui/system';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styleProps.variant && styles[styleProps.variant], styleProps.align !== 'inherit' && styles[`align${capitalize(styleProps.align)}`], styleProps.noWrap && styles.noWrap, styleProps.gutterBottom && styles.gutterBottom, styleProps.paragraph && styles.paragraph), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root', variant, styleProps.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\n\nexport const TypographyRoot = experimentalStyled('span', {}, {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  margin: 0\n}, styleProps.variant && theme.typography[styleProps.variant], styleProps.align !== 'inherit' && {\n  textAlign: styleProps.align\n}, styleProps.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, styleProps.gutterBottom && {\n  marginBottom: '0.35em'\n}, styleProps.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n}; // TODO v6: deprecate these color values in v5.x and remove the transformation in v6\n\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  themeProps.color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(themeProps);\n\n  const {\n    align = 'inherit',\n    className,\n    component,\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = 'body1',\n    variantMapping = defaultVariantMapping\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  const styleProps = _extends({}, props, {\n    align,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    styleProps: styleProps,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .object\n} : void 0;\nexport default Typography;"]},"metadata":{},"sourceType":"module"}