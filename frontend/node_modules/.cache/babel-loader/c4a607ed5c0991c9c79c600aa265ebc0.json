{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef, refType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport TouchRipple from './TouchRipple';\nimport { getButtonBaseUtilityClass } from './buttonBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => styles.root || {};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    disabled,\n    focusVisible,\n    focusVisibleClassName,\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  const composedClasses = composeClasses(slots, getButtonBaseUtilityClass, classes);\n\n  if (focusVisible && focusVisibleClassName) {\n    composedClasses.root += ` ${focusVisibleClassName}`;\n  }\n\n  return composedClasses;\n};\n\nexport const ButtonBaseRoot = experimentalStyled('button', {}, {\n  name: 'MuiButtonBase',\n  slot: 'Root',\n  overridesResolver\n})({\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  position: 'relative',\n  boxSizing: 'border-box',\n  WebkitTapHighlightColor: 'transparent',\n  backgroundColor: 'transparent',\n  // Reset default value\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  border: 0,\n  margin: 0,\n  // Remove the margin in Safari\n  borderRadius: 0,\n  padding: 0,\n  // Remove the padding in Firefox\n  cursor: 'pointer',\n  userSelect: 'none',\n  verticalAlign: 'middle',\n  MozAppearance: 'none',\n  // Reset\n  WebkitAppearance: 'none',\n  // Reset\n  textDecoration: 'none',\n  // So we take precedent over the style of a native <a /> element.\n  color: 'inherit',\n  '&::-moz-focus-inner': {\n    borderStyle: 'none' // Remove Firefox dotted outline.\n\n  },\n  '&.Mui-disabled': {\n    pointerEvents: 'none',\n    // Disable link interactions\n    cursor: 'default'\n  },\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n});\n/**\n * `ButtonBase` contains as few styles as possible.\n * It aims to be a simple building block for creating a button.\n * It contains a load of style reset and some focus/ripple logic.\n */\n\nconst ButtonBase = /*#__PURE__*/React.forwardRef(function ButtonBase(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiButtonBase'\n  });\n\n  const {\n    action,\n    buttonRef: buttonRefProp,\n    centerRipple = false,\n    children,\n    className,\n    component = 'button',\n    disabled = false,\n    disableRipple = false,\n    disableTouchRipple = false,\n    focusRipple = false,\n    LinkComponent = 'a',\n    onBlur,\n    onClick,\n    onContextMenu,\n    onDragLeave,\n    onFocus,\n    onFocusVisible,\n    onKeyDown,\n    onKeyUp,\n    onMouseDown,\n    onMouseLeave,\n    onMouseUp,\n    onTouchEnd,\n    onTouchMove,\n    onTouchStart,\n    tabIndex = 0,\n    TouchRippleProps,\n    type\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"action\", \"buttonRef\", \"centerRipple\", \"children\", \"className\", \"component\", \"disabled\", \"disableRipple\", \"disableTouchRipple\", \"focusRipple\", \"focusVisibleClassName\", \"LinkComponent\", \"onBlur\", \"onClick\", \"onContextMenu\", \"onDragLeave\", \"onFocus\", \"onFocusVisible\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onMouseLeave\", \"onMouseUp\", \"onTouchEnd\", \"onTouchMove\", \"onTouchStart\", \"tabIndex\", \"TouchRippleProps\", \"type\"]);\n\n  const buttonRef = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n\n  React.useEffect(() => {\n    isFocusVisibleRef.current = focusVisible;\n  }, [focusVisible, isFocusVisibleRef]);\n  React.useImperativeHandle(action, () => ({\n    focusVisible: () => {\n      setFocusVisible(true);\n      buttonRef.current.focus();\n    }\n  }), []);\n  React.useEffect(() => {\n    if (focusVisible && focusRipple && !disableRipple) {\n      rippleRef.current.pulsate();\n    }\n  }, [disableRipple, focusRipple, focusVisible]);\n\n  function useRippleHandler(rippleAction, eventCallback, skipRippleAction = disableTouchRipple) {\n    return useEventCallback(event => {\n      if (eventCallback) {\n        eventCallback(event);\n      }\n\n      const ignore = skipRippleAction;\n\n      if (!ignore && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n\n      return true;\n    });\n  }\n\n  const handleMouseDown = useRippleHandler('start', onMouseDown);\n  const handleContextMenu = useRippleHandler('stop', onContextMenu);\n  const handleDragLeave = useRippleHandler('stop', onDragLeave);\n  const handleMouseUp = useRippleHandler('stop', onMouseUp);\n  const handleMouseLeave = useRippleHandler('stop', event => {\n    if (focusVisible) {\n      event.preventDefault();\n    }\n\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n  });\n  const handleTouchStart = useRippleHandler('start', onTouchStart);\n  const handleTouchEnd = useRippleHandler('stop', onTouchEnd);\n  const handleTouchMove = useRippleHandler('stop', onTouchMove);\n  const handleBlur = useRippleHandler('stop', event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  }, false);\n  const handleFocus = useEventCallback(event => {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n\n      if (onFocusVisible) {\n        onFocusVisible(event);\n      }\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  });\n\n  const isNonNativeButton = () => {\n    const button = buttonRef.current;\n    return component && component !== 'button' && !(button.tagName === 'A' && button.href);\n  };\n  /**\n   * IE11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat\n   */\n\n\n  const keydownRef = React.useRef(false);\n  const handleKeyDown = useEventCallback(event => {\n    // Check if key is already down to avoid repeats being counted as multiple activations\n    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {\n      keydownRef.current = true;\n      event.persist();\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.start(event);\n      });\n    }\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ') {\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter' && !disabled) {\n      event.preventDefault();\n\n      if (onClick) {\n        onClick(event);\n      }\n    }\n  });\n  const handleKeyUp = useEventCallback(event => {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n    if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {\n      keydownRef.current = false;\n      event.persist();\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.pulsate(event);\n      });\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {\n      onClick(event);\n    }\n  });\n  let ComponentProp = component;\n\n  if (ComponentProp === 'button' && other.href) {\n    ComponentProp = LinkComponent;\n  }\n\n  const buttonProps = {};\n\n  if (ComponentProp === 'button') {\n    buttonProps.type = type === undefined ? 'button' : type;\n    buttonProps.disabled = disabled;\n  } else {\n    if (ComponentProp !== 'a' || !other.href) {\n      buttonProps.role = 'button';\n    }\n\n    buttonProps['aria-disabled'] = disabled;\n  }\n\n  const handleUserRef = useForkRef(buttonRefProp, ref);\n  const handleOwnRef = useForkRef(focusVisibleRef, buttonRef);\n  const handleRef = useForkRef(handleUserRef, handleOwnRef);\n  const [mountedState, setMountedState] = React.useState(false);\n  React.useEffect(() => {\n    setMountedState(true);\n  }, []);\n  const enableTouchRipple = mountedState && !disableRipple && !disabled;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (enableTouchRipple && !rippleRef.current) {\n        console.error(['Material-UI: The `component` prop provided to ButtonBase is invalid.', 'Please make sure the children prop is rendered in this custom component.'].join('\\n'));\n      }\n    }, [enableTouchRipple]);\n  }\n\n  const styleProps = _extends({}, props, {\n    centerRipple,\n    component,\n    disabled,\n    disableRipple,\n    disableTouchRipple,\n    focusRipple,\n    tabIndex,\n    focusVisible\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(ButtonBaseRoot, _extends({\n    as: ComponentProp,\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    onBlur: handleBlur,\n    onClick: onClick,\n    onContextMenu: handleContextMenu,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onMouseDown: handleMouseDown,\n    onMouseLeave: handleMouseLeave,\n    onMouseUp: handleMouseUp,\n    onDragLeave: handleDragLeave,\n    onTouchEnd: handleTouchEnd,\n    onTouchMove: handleTouchMove,\n    onTouchStart: handleTouchStart,\n    ref: handleRef,\n    tabIndex: disabled ? -1 : tabIndex,\n    type: type\n  }, buttonProps, other, {\n    children: [children, enableTouchRipple ?\n    /*#__PURE__*/\n\n    /* TouchRipple is only needed client-side, x2 boost on the server. */\n    _jsx(TouchRipple, _extends({\n      ref: rippleRef,\n      center: centerRipple\n    }, TouchRippleProps)) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonBase.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A ref for imperative actions.\n   * It currently only supports `focusVisible()` action.\n   */\n  action: refType,\n\n  /**\n   * @ignore\n   *\n   * Use that prop to pass a ref to the native button component.\n   * @deprecated Use `ref` instead.\n   */\n  buttonRef: refType,\n\n  /**\n   * If `true`, the ripples are centered.\n   * They won't start at the cursor interaction position.\n   * @default false\n   */\n  centerRipple: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusedVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the touch ripple effect is disabled.\n   * @default false\n   */\n  disableTouchRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the base button will have a keyboard focus ripple.\n   * @default false\n   */\n  focusRipple: PropTypes.bool,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/master/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  href: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used to render a link when the `href` prop is provided.\n   * @default 'a'\n   */\n  LinkComponent: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onContextMenu: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onDragLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component is focused with a keyboard.\n   * We trigger a `onFocus` callback too.\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchMove: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Props applied to the `TouchRipple` element.\n   */\n  TouchRippleProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string])\n} : void 0;\nexport default ButtonBase;","map":{"version":3,"sources":["/Users/jgchen/Desktop/Dev/graph-visualizer/node_modules/@material-ui/core/ButtonBase/ButtonBase.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","elementTypeAcceptingRef","refType","unstable_composeClasses","composeClasses","experimentalStyled","useThemeProps","useForkRef","useEventCallback","useIsFocusVisible","TouchRipple","getButtonBaseUtilityClass","jsx","_jsx","jsxs","_jsxs","overridesResolver","props","styles","root","useUtilityClasses","styleProps","disabled","focusVisible","focusVisibleClassName","classes","slots","composedClasses","ButtonBaseRoot","name","slot","display","alignItems","justifyContent","position","boxSizing","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","textDecoration","color","borderStyle","pointerEvents","colorAdjust","ButtonBase","forwardRef","inProps","ref","action","buttonRef","buttonRefProp","centerRipple","children","className","component","disableRipple","disableTouchRipple","focusRipple","LinkComponent","onBlur","onClick","onContextMenu","onDragLeave","onFocus","onFocusVisible","onKeyDown","onKeyUp","onMouseDown","onMouseLeave","onMouseUp","onTouchEnd","onTouchMove","onTouchStart","tabIndex","TouchRippleProps","type","other","useRef","rippleRef","isFocusVisibleRef","handleFocusVisible","handleBlurVisible","focusVisibleRef","setFocusVisible","useState","useEffect","current","useImperativeHandle","focus","pulsate","useRippleHandler","rippleAction","eventCallback","skipRippleAction","event","ignore","handleMouseDown","handleContextMenu","handleDragLeave","handleMouseUp","handleMouseLeave","preventDefault","handleTouchStart","handleTouchEnd","handleTouchMove","handleBlur","handleFocus","currentTarget","isNonNativeButton","button","tagName","href","keydownRef","handleKeyDown","key","persist","stop","start","target","handleKeyUp","defaultPrevented","ComponentProp","buttonProps","undefined","role","handleUserRef","handleOwnRef","handleRef","mountedState","setMountedState","enableTouchRipple","process","env","NODE_ENV","console","error","join","as","center","propTypes","bool","node","object","string","any","elementType","func","sx","oneOfType","number","oneOf"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef, refType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport TouchRipple from './TouchRipple';\nimport { getButtonBaseUtilityClass } from './buttonBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => styles.root || {};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    disabled,\n    focusVisible,\n    focusVisibleClassName,\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  const composedClasses = composeClasses(slots, getButtonBaseUtilityClass, classes);\n\n  if (focusVisible && focusVisibleClassName) {\n    composedClasses.root += ` ${focusVisibleClassName}`;\n  }\n\n  return composedClasses;\n};\n\nexport const ButtonBaseRoot = experimentalStyled('button', {}, {\n  name: 'MuiButtonBase',\n  slot: 'Root',\n  overridesResolver\n})({\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  position: 'relative',\n  boxSizing: 'border-box',\n  WebkitTapHighlightColor: 'transparent',\n  backgroundColor: 'transparent',\n  // Reset default value\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  border: 0,\n  margin: 0,\n  // Remove the margin in Safari\n  borderRadius: 0,\n  padding: 0,\n  // Remove the padding in Firefox\n  cursor: 'pointer',\n  userSelect: 'none',\n  verticalAlign: 'middle',\n  MozAppearance: 'none',\n  // Reset\n  WebkitAppearance: 'none',\n  // Reset\n  textDecoration: 'none',\n  // So we take precedent over the style of a native <a /> element.\n  color: 'inherit',\n  '&::-moz-focus-inner': {\n    borderStyle: 'none' // Remove Firefox dotted outline.\n\n  },\n  '&.Mui-disabled': {\n    pointerEvents: 'none',\n    // Disable link interactions\n    cursor: 'default'\n  },\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n});\n/**\n * `ButtonBase` contains as few styles as possible.\n * It aims to be a simple building block for creating a button.\n * It contains a load of style reset and some focus/ripple logic.\n */\n\nconst ButtonBase = /*#__PURE__*/React.forwardRef(function ButtonBase(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiButtonBase'\n  });\n\n  const {\n    action,\n    buttonRef: buttonRefProp,\n    centerRipple = false,\n    children,\n    className,\n    component = 'button',\n    disabled = false,\n    disableRipple = false,\n    disableTouchRipple = false,\n    focusRipple = false,\n    LinkComponent = 'a',\n    onBlur,\n    onClick,\n    onContextMenu,\n    onDragLeave,\n    onFocus,\n    onFocusVisible,\n    onKeyDown,\n    onKeyUp,\n    onMouseDown,\n    onMouseLeave,\n    onMouseUp,\n    onTouchEnd,\n    onTouchMove,\n    onTouchStart,\n    tabIndex = 0,\n    TouchRippleProps,\n    type\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"action\", \"buttonRef\", \"centerRipple\", \"children\", \"className\", \"component\", \"disabled\", \"disableRipple\", \"disableTouchRipple\", \"focusRipple\", \"focusVisibleClassName\", \"LinkComponent\", \"onBlur\", \"onClick\", \"onContextMenu\", \"onDragLeave\", \"onFocus\", \"onFocusVisible\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onMouseLeave\", \"onMouseUp\", \"onTouchEnd\", \"onTouchMove\", \"onTouchStart\", \"tabIndex\", \"TouchRippleProps\", \"type\"]);\n\n  const buttonRef = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n\n  React.useEffect(() => {\n    isFocusVisibleRef.current = focusVisible;\n  }, [focusVisible, isFocusVisibleRef]);\n  React.useImperativeHandle(action, () => ({\n    focusVisible: () => {\n      setFocusVisible(true);\n      buttonRef.current.focus();\n    }\n  }), []);\n  React.useEffect(() => {\n    if (focusVisible && focusRipple && !disableRipple) {\n      rippleRef.current.pulsate();\n    }\n  }, [disableRipple, focusRipple, focusVisible]);\n\n  function useRippleHandler(rippleAction, eventCallback, skipRippleAction = disableTouchRipple) {\n    return useEventCallback(event => {\n      if (eventCallback) {\n        eventCallback(event);\n      }\n\n      const ignore = skipRippleAction;\n\n      if (!ignore && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n\n      return true;\n    });\n  }\n\n  const handleMouseDown = useRippleHandler('start', onMouseDown);\n  const handleContextMenu = useRippleHandler('stop', onContextMenu);\n  const handleDragLeave = useRippleHandler('stop', onDragLeave);\n  const handleMouseUp = useRippleHandler('stop', onMouseUp);\n  const handleMouseLeave = useRippleHandler('stop', event => {\n    if (focusVisible) {\n      event.preventDefault();\n    }\n\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n  });\n  const handleTouchStart = useRippleHandler('start', onTouchStart);\n  const handleTouchEnd = useRippleHandler('stop', onTouchEnd);\n  const handleTouchMove = useRippleHandler('stop', onTouchMove);\n  const handleBlur = useRippleHandler('stop', event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  }, false);\n  const handleFocus = useEventCallback(event => {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n\n      if (onFocusVisible) {\n        onFocusVisible(event);\n      }\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  });\n\n  const isNonNativeButton = () => {\n    const button = buttonRef.current;\n    return component && component !== 'button' && !(button.tagName === 'A' && button.href);\n  };\n  /**\n   * IE11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat\n   */\n\n\n  const keydownRef = React.useRef(false);\n  const handleKeyDown = useEventCallback(event => {\n    // Check if key is already down to avoid repeats being counted as multiple activations\n    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {\n      keydownRef.current = true;\n      event.persist();\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.start(event);\n      });\n    }\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ') {\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter' && !disabled) {\n      event.preventDefault();\n\n      if (onClick) {\n        onClick(event);\n      }\n    }\n  });\n  const handleKeyUp = useEventCallback(event => {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n    if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {\n      keydownRef.current = false;\n      event.persist();\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.pulsate(event);\n      });\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {\n      onClick(event);\n    }\n  });\n  let ComponentProp = component;\n\n  if (ComponentProp === 'button' && other.href) {\n    ComponentProp = LinkComponent;\n  }\n\n  const buttonProps = {};\n\n  if (ComponentProp === 'button') {\n    buttonProps.type = type === undefined ? 'button' : type;\n    buttonProps.disabled = disabled;\n  } else {\n    if (ComponentProp !== 'a' || !other.href) {\n      buttonProps.role = 'button';\n    }\n\n    buttonProps['aria-disabled'] = disabled;\n  }\n\n  const handleUserRef = useForkRef(buttonRefProp, ref);\n  const handleOwnRef = useForkRef(focusVisibleRef, buttonRef);\n  const handleRef = useForkRef(handleUserRef, handleOwnRef);\n  const [mountedState, setMountedState] = React.useState(false);\n  React.useEffect(() => {\n    setMountedState(true);\n  }, []);\n  const enableTouchRipple = mountedState && !disableRipple && !disabled;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (enableTouchRipple && !rippleRef.current) {\n        console.error(['Material-UI: The `component` prop provided to ButtonBase is invalid.', 'Please make sure the children prop is rendered in this custom component.'].join('\\n'));\n      }\n    }, [enableTouchRipple]);\n  }\n\n  const styleProps = _extends({}, props, {\n    centerRipple,\n    component,\n    disabled,\n    disableRipple,\n    disableTouchRipple,\n    focusRipple,\n    tabIndex,\n    focusVisible\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(ButtonBaseRoot, _extends({\n    as: ComponentProp,\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    onBlur: handleBlur,\n    onClick: onClick,\n    onContextMenu: handleContextMenu,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onMouseDown: handleMouseDown,\n    onMouseLeave: handleMouseLeave,\n    onMouseUp: handleMouseUp,\n    onDragLeave: handleDragLeave,\n    onTouchEnd: handleTouchEnd,\n    onTouchMove: handleTouchMove,\n    onTouchStart: handleTouchStart,\n    ref: handleRef,\n    tabIndex: disabled ? -1 : tabIndex,\n    type: type\n  }, buttonProps, other, {\n    children: [children, enableTouchRipple ?\n    /*#__PURE__*/\n\n    /* TouchRipple is only needed client-side, x2 boost on the server. */\n    _jsx(TouchRipple, _extends({\n      ref: rippleRef,\n      center: centerRipple\n    }, TouchRippleProps)) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonBase.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A ref for imperative actions.\n   * It currently only supports `focusVisible()` action.\n   */\n  action: refType,\n\n  /**\n   * @ignore\n   *\n   * Use that prop to pass a ref to the native button component.\n   * @deprecated Use `ref` instead.\n   */\n  buttonRef: refType,\n\n  /**\n   * If `true`, the ripples are centered.\n   * They won't start at the cursor interaction position.\n   * @default false\n   */\n  centerRipple: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusedVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the touch ripple effect is disabled.\n   * @default false\n   */\n  disableTouchRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the base button will have a keyboard focus ripple.\n   * @default false\n   */\n  focusRipple: PropTypes.bool,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/master/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  href: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used to render a link when the `href` prop is provided.\n   * @default 'a'\n   */\n  LinkComponent: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onContextMenu: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onDragLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component is focused with a keyboard.\n   * We trigger a `onFocus` callback too.\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchMove: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Props applied to the `TouchRipple` element.\n   */\n  TouchRippleProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string])\n} : void 0;\nexport default ButtonBase;"]},"metadata":{},"sourceType":"module"}